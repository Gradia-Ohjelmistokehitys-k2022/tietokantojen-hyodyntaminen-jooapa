@page "/signup"
@rendermode InteractiveServer
@inject Api Api
@inject NavigationManager nav
<PageTitle>Sign Up</PageTitle>

@work
<EditForm Model="@UserForm" OnValidSubmit="@Submit">
	<AntiforgeryToken />
	<DataAnnotationsValidator />
	<div>
		<label>
			First Name:
			<InputText @bind-Value="UserForm.FirstName" />
			<ValidationMessage For="@(() => UserForm.FirstName)" />
		</label>
	</div>
	<div>
		<label>
			Last Name:
			<InputText @bind-Value="UserForm.LastName" />
			<ValidationMessage For="@(() => UserForm.LastName)" />
		</label>
	</div>
	<div>
		<label>
			Email:
			<InputText @bind-Value="UserForm.Email" />
			<ValidationMessage For="@(() => UserForm.Email)" />
		</label>
	</div>
	<div>
		<label>
			Password:
			<InputText @bind-Value="UserForm.PasswordHash" type="password" />
			<ValidationMessage For="@(() => UserForm.PasswordHash)" />
		</label>
	</div>
	<div>
		<button type="submit">Submit</button>
	</div>
</EditForm>

@code {
	User UserForm = new User();
	public string work = "";
	protected override void OnInitialized()
	{
		work = "asdasddsa";
	}

	private async Task Submit()
	{
		await Api.SignUp(UserForm);
		nav.NavigateTo("login");
	}
}
